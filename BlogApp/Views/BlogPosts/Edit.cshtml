



@model BlogApp.BlogPost

@{
                /**/

                ViewBag.Title = "Create A Blog Post";
}



@using (Html.BeginForm("Edit", "BlogPosts", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Create a new blog post</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)



        <div class="form-group">
            @Html.LabelFor(model => model.Title, "Post title", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Body, "Blog post content", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Body, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="current-img">Current image:</label>
            <div class="col-md-10">

                <img class="form-control form-img" src="@Model.MediaURL" alt="Alternate Text" id="current-img" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MediaURL, "Upload new image", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.TextBoxFor(m => m.Image, new { type = "file" })
                @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })

                @*<input type="file" name="image" value="" />*@
            </div>
        </div>
        @Html.HiddenFor(model => model.ShortBody)
        @*<div class="form-group">
                @Html.LabelFor(model => model.Published, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Published)
                        @Html.ValidationMessageFor(model => model.Published, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" id="submit-button" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/tinymce/tinymce.min.js"></script>
    <script src="~/Scripts/tinymce/jquery.tinymce.min.js"></script>
    <script type="text/javascript">
        $(function () {
            tinymce.init({
                selector: '#Body',
            });
        });
        document.querySelector("#submit-button").addEventListener("click", function (event) {
            document.querySelector("#ShortBody").value = tinymce.activeEditor.getContent({ format: 'text' });
        });
    </script>


}
