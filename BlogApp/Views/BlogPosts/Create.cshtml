@model BlogApp.BlogPost

    @{
        ViewBag.Title = "Create A Blog Post";
    }

<div class="container">

    @using (Html.BeginForm("Create", "BlogPosts", FormMethod.Post, new { @enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4 class="top-h2">Create a new blog post</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })




            <div class="form-group">
                @Html.LabelFor(model => model.Title, "Post title", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>



            <div class="form-group">
                @Html.LabelFor(model => model.Body, "Blog post content", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Body, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MediaURL, "Thumb image", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*<input type="file" name="image" value="" />*@

                    @Html.TextBoxFor(m => m.Image, new { type = "file" })
                    @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                </div>
            </div>
            @Html.HiddenFor(model => model.ShortBody)
            @*<div class="form-group">
                    @Html.LabelFor(model => model.Published, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Published)
                            @Html.ValidationMessageFor(model => model.Published, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>*@

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" id="submit-button" />
                    <input type="button" class="btn btn-danger" value="Cancel" onclick="location.href='@Url.Action("Index","BlogPosts")'"/>
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to Main Page", "Index")
    </div>

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/tinymce/tinymce.min.js"></script>
    <script src="~/Scripts/tinymce/jquery.tinymce.min.js"></script>
    <script type="text/javascript">
        $(function () {
            tinymce.init({
                selector: '#Body',
                height: "218"
            });
        });
        document.querySelector("#submit-button").addEventListener("click", function (event) {
            document.querySelector("#ShortBody").value = tinymce.activeEditor.getContent({ format: 'text' });
        });
    </script>


}
